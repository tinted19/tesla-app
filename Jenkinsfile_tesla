node {
    def mavenHome = tool name: 'maven3.8.6'
    stage('1clonecode'){
        git 'https://github.com/tinted9/tesla-app'
        // sh 'git clone https://github.com/tinted9/tesla-app'
    }
    stage('2Test&Build'){
      sh "${mavenHome}/bin/mvn clean package"
    }
    stage('3codeQuality'){
      sh "${mavenHome}/bin/mvn sonar:sonar"
    }
    stage('4uploadArtifacts'){
      sh "${mavenHome}/bin/mvn deploy"
    //http://52.53.227.31:8191/landmark/repository/tesla-fe-snapshots/
    //http://52.53.227.31:8191/landmark/repository/tesla-fe-releases/
    // vi pom.xml and added repository details   
    // vi setting.xml and add AUTHENTICATION details
    }
    stage('5deploy2UAT'){
      sh "echo 'deploy to UAT'"
      deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://18.212.58.51:8080/')], contextPath: null, war: 'target/*war'
    }
    stage('6approvalGate'){
      sh "echo 'application is ready for review'"
      timeout(time:5, unit:'HOURS'){
          input message: 'Application is ready for review and approval'
      }
    }
    stage('7deploy2Prod'){
        sh "sleep 50"
        deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://18.212.58.51:8080/')], contextPath: null, war: 'target/*war'
    }
    stage('8emailNotification'){
    emailext body: '''Hi All,

Check Build status.

Landmark Technologies''', recipientProviders: [buildUser(), developers(), upstreamDevelopers(), brokenBuildSuspects(), brokenTestsSuspects(), contributor()], subject: 'build status', to: 'tesla-app@gmail.com'
  }
}
